{"./":{"url":"./","title":"说明","keywords":"","body":"说明 脚本根目录 脚本工程的Resources\\Script目录 脚本接口改动 去掉repeat until语法 添加continue语法 去掉io和package库 去掉module 去掉setfenv和getfenv 去掉_G，新增globals(name, ...)可以获取全局变量，没有设置全局变量的方式 os库去掉大多数接口，只保留clock/date/difftime/time/setlocale 新增bit和lpeg库 脚本封装 每个脚本文件都具有自己单独的环境表，只有全局函数可以直接引用 引用系统库 要使用math/string等系统库，需要在脚本中先进行导出，如 local math = require \"math\" 之后就可以使用math库了 引用其他文件 要使用脚本目录下的其他文件，需要在脚本中先进行导出，如 local test = require \"test\" 之后test就指向test.lua的全局环境表，可以直接读取变量，调用函数等 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/":{"url":"FairyGUI/","title":"FairyGUI接口","keywords":"","body":"FairyGUI接口 操作UI的接口，编辑器和相关概念参考http://www.fairygui.com 编辑器下载地址 http://res.fairygui.com/FairyGUI-Editor_3_10_3.zip 准备工作 安装游戏使用的字体，目前为思源黑体和本墨金宋，拷贝到系统文件夹\\Fonts(从Resources\\Fonts目录下拷贝) 设置导出目录 点击菜单文件/发布设置，选择编辑全局设置，修改导出目录到自己的脚本资源文件夹(Resources\\UI目录) 发布UI资源 每次UI有更改，都需要重新发布对应的包 脚本引用 需要在脚本中使用接口，需要先引入ui库，如 local ui = require \"ui\" 全局函数 create(包名, 组件名) 创建组件 window(包名, 组件名) 创建窗口 extension(包名, 组件名) 组件子类化 hitTest(float, float) 点击测试传入坐标的控件 hidePopup() 关闭所有弹出 globalToLocal(x, y) 全局坐标转换为UI坐标 localToGlobal(x, y) UI坐标转换为全局坐标 常用类 Object Component Window Loader List TextField TextInput Button By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/Object.html":{"url":"FairyGUI/Object.html","title":"Object","keywords":"","body":"Object 继承自EventDispatcher 成员 x 横坐标 y 纵坐标 width 宽 height 高 scaleX 横向缩放 scaleY 纵向缩放 scale(x, y) 设置缩放 gray 是否灰色 visible 是否可见 touchable 是否可点击 sortingOrder 渲染顺序 group 所属组合 text 文本内容 icon 图标 tooltips 悬浮提示文本 parent 所在父组件 removeFromParent() 从父组件移除自己 popup([Object[, PopupDirection]) 弹出控件，可选参数：位置和方向 togglePopup([Object[, PopupDirection]) 弹出或关闭控件，可选参数：位置和方向 hidePopup() 关闭弹出 globalToLocal(x, y) 全局坐标转换为当前UI坐标 localToGlobal(x, y) 当前UI坐标转换为全局坐标 center() 居中显示 name 名字 data 关联的任意lua值 asTextField 转换成TextField asTextInput 转换成TextInput asRichTextField 转换成RichTextField asGraph 转换成Graph asLoader 转换成Loader asList 转换成List asComponent 转换成Component asLabel 转换成Label asButton 转换成Button asComboBox 转换成ComboBox asProgressBar 转换成ProgressBar asSlider 转换成Slider asScrollBar 转换成ScrollBar By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/Component.html":{"url":"FairyGUI/Component.html","title":"Component","keywords":"","body":"Component 继承自Object 静态 new() 构造函数 成员 addChild(Object) 添加子控件 addChild(Object, int) 添加子控件到指定顺序 removeChild(Object) 删除指定的子控件 removeChild(int) 删除指定顺序位置的子控件 getChild(string) 通过名字获取子控件 getChild(int) 获取指定顺序位置的子控件 getChildIndex(Object) 获取指定子控件的顺序位置 setChildIndex(Object, int) 设置指定子控件的顺序位置 swapChildren(Object, Object) 交换2个指定子控件的顺序位置 swapChildren(int, int) 交换2个指定顺序位置的子控件 numChildren 获得子控件的数量 getController(string) 获得控制器 getTransition(string) 获得动效 opaque 是否点击穿透 scrollPane 获取滚动控制面板(如果有滚动) fullscreen() 设置为全屏 removeChildren() 移除全部子控件 removeChildren(int, int) 移除指定顺序位置范围的子控件 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/Window.html":{"url":"FairyGUI/Window.html","title":"Window","keywords":"","body":"Window 继承自Component 成员 show() 显示窗口 hide() 隐藏窗口 toggle() 切换显示/隐藏窗口 bringToFront() 提升到最前方 showing 是否显示 top 是否最顶层 modal 是否阻止其他UI bringToFrontOnClick 是否在点击时自动提升到最前方 contentPane 窗口内容 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/Graph.html":{"url":"FairyGUI/Graph.html","title":"Graph","keywords":"","body":"Graph 继承自Object 成员 color 颜色 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/Loader.html":{"url":"FairyGUI/Loader.html","title":"Loader","keywords":"","body":"Loader 继承自Object 成员 url 装载的图片路径 color 颜色 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/List.html":{"url":"FairyGUI/List.html","title":"List","keywords":"","body":"List 继承自Component 成员 defaultItem 默认子项组件 numItems 子项总数 childToItem(int) 子项索引转换为列表索引 itemToChild(int) 列表索引转换为子项索引 itemRenderer 子项渲染 scrollItemToViewOnClick 点击子项时是否滚动过去 foldInvisibleItems 不显示的子项是否不占用空间 selectedIndex 已选择的子项 addSelection(int, bool) 添加选择项，并指定是否滚动过去 removeSelection(int) 去掉选择项 clearSelection() 清除所有选择项 selectAll() 选择所有项 selectReverse() 反选 refreshVirtual() 刷新虚拟列表 virtual 是否虚拟列表 setVirtual 设置为虚拟列表(不可逆) getSelection() 获取所有选择项 resizeToFit(int[, int]) 设置列表到合适的大小，可选参数：最小大小 scrollToView(int) 滚动到指定项 addItem([url]) 添加列表项 removeItem(int/Object) 删除列表项 removeItems() 删除所有列表项 removeItems(int, int) 删除指定范围的列表项 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/TextField.html":{"url":"FairyGUI/TextField.html","title":"TextField","keywords":"","body":"TextField 继承自Object 成员 color 颜色 template 模板字符串映射 set(name, value) 设置模板参数 flush() 刷新模板字符串 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/TextInput.html":{"url":"FairyGUI/TextInput.html","title":"TextInput","keywords":"","body":"TextInput 继承自TextField By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/RichTextField.html":{"url":"FairyGUI/RichTextField.html","title":"RichTextField","keywords":"","body":"RichTextField 继承自TextField By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/EventType.html":{"url":"FairyGUI/EventType.html","title":"EventType","keywords":"","body":"EventType 内置事件类型 静态 Enter 添加到游戏中 Exit 从游戏中移除 Changed 状态改变(控制器页面改变/多选按钮选中状态改变等) Submit 提交 TouchBegin 按下鼠标/触摸 TouchMove 处于按下状态同时移动 TouchEnd 松开鼠标/触摸 Click 点击 RollOver 鼠标/触摸进入范围 RollOut 鼠标/触摸超出范围 MouseWheel 鼠标滚轮 RightClick 鼠标右键 MiddleClick 鼠标中键 PositionChange 位置改变后 SizeChange 大小改变后 KeyDown 键盘按下 KeyUp 键盘松开 Scroll 列表滚动 ScrollEnd 列表滚动停止 PullDownRelease 列表拉到底 PullUpRelease 列表拉到顶 ClickItem 点击列表中的项 ClickLink 点击RichText的链接 ClickMenu 点击弹出菜单 RightClickItem 右键点击列表中的项 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/PopupDirection.html":{"url":"FairyGUI/PopupDirection.html","title":"PopupDirection","keywords":"","body":"PopupDirection 内置弹出方向 静态 Auto 自动 Up 向上 Down 向下 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/EventContext.html":{"url":"FairyGUI/EventContext.html","title":"EventContext","keywords":"","body":"EventContext 事件关联上下文，基本只用于事件回调函数中 成员 input 输入事件相关参数 stop() 停止事件继续传递 prevent() 停止处理事件 capture() 捕捉触摸/鼠标 uncapture() 释放触摸/鼠标 prevented 事件是否已被停止 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/EventDispatcher.html":{"url":"FairyGUI/EventDispatcher.html","title":"EventDispatcher","keywords":"","body":"EventDispatcher 事件分发器，是所有控件的基础，提高监听事件的接口 成员 addEventListener(int, callback) 监听指定事件 removeEventListener(int) 移除指定事件的所有监听 removeEventListeners() 移除所有监听 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/Color.html":{"url":"FairyGUI/Color.html","title":"Color","keywords":"","body":"Color 表示颜色的类 静态 new()/new(r, g, b) 构造函数 White/Yellow/Blue/Green/Red/Magenta/Black/Orange/Gray 标准颜色组合 成员 r 红色 g 绿色 b 蓝色 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/Group.html":{"url":"FairyGUI/Group.html","title":"Group","keywords":"","body":"Group 继承自Object 成员 getChild(string) 获取组合内指定名字的控件 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/Controller.html":{"url":"FairyGUI/Controller.html","title":"Controller","keywords":"","body":"Controller 控制器，继承自EventDispatcher 成员 parent 所属组件 selectedIndex 当前状态页码 selectedPage 当前状态页名字 previousIndex 上一次状态页码 previousPage 上一次状态页名字 count 状态页总数 has(string) 是否具有指定名字的状态页 getPage(int) 获得指定状态页的名字 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/Transition.html":{"url":"FairyGUI/Transition.html","title":"Transition","keywords":"","body":"Transition 动效 成员 owner 所属组件 playing 是否正在播放 pause(bool) 暂停/恢复播放 hook(string, callback) 监听事件 clear() 清除所有监听 timeScale 时间缩放 play()/play(callback) 开始播放，callback在播放完成时回调 play(bool)/play(bool, callback) 指定是否反向播放，callback在播放完成时回调 stop() 停止播放 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/ScrollPane.html":{"url":"FairyGUI/ScrollPane.html","title":"ScrollPane","keywords":"","body":"ScrollPane 滚动视图 成员 owner 所属组件 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/Label.html":{"url":"FairyGUI/Label.html","title":"Label","keywords":"","body":"Label 继承自Component 成员 color 文本颜色 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/Button.html":{"url":"FairyGUI/Button.html","title":"Button","keywords":"","body":"Button 继承自Component 成员 color 文本颜色 selectedText 选中文本 selectedIcon 选中图标 selected 是否选中状态 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/ComboBox.html":{"url":"FairyGUI/ComboBox.html","title":"ComboBox","keywords":"","body":"ComboBox 继承自Component 成员 color 文本颜色 value 选中的值 selectedIndex 选中的索引 visibleItems 显示的选项数量 popupDirection 下拉框方向 By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/ProgressBar.html":{"url":"FairyGUI/ProgressBar.html","title":"ProgressBar","keywords":"","body":"ProgressBar 继承自Component value 当前进度 max 最大进度 reverse 是否反向 tweenValue(value, during) 在during秒内进度条走到value By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/Slider.html":{"url":"FairyGUI/Slider.html","title":"Slider","keywords":"","body":"Slider 继承自Component 成员 value 当前进度 max 最大进度 reverse 是否反向 tweenValue(value, during) 在during秒内进度条走到value By libla            此页面修订于： 2019-03-13 05:41:25 "},"FairyGUI/ScrollBar.html":{"url":"FairyGUI/ScrollBar.html","title":"ScrollBar","keywords":"","body":"ScrollBar 继承自Component By libla            此页面修订于： 2019-03-13 05:41:25 "},"System/":{"url":"System/","title":"系统接口","keywords":"","body":"系统接口 包含有各类系统功能调用，目前没有接口 By libla            此页面修订于： 2019-03-13 05:41:25 "},"Event/":{"url":"Event/","title":"事件接口","keywords":"","body":"事件接口 注册和发送事件的接口，可用于C/C++和lua之间的通信，也可用于lua之间交互 调用列表 register(事件类型, 回调函数) 用于绑定事件 send(事件类型, ...) 发送消息，可以带任意参数，回调函数会接收到 By libla            此页面修订于： 2019-03-13 05:41:25 "},"Net/":{"url":"Net/","title":"网络接口","keywords":"","body":"网络接口 包含有网络连接、接收/发送数据、打包/解包数据的接口，目前只是临时封装 调用列表 connect(接收回调) 传入一个回调函数，当对端有数据时，回调函数就会被调用 mock(模拟处理) 传入一个模拟处理函数，用于处理客户端正常请求时应该返回给客户端的打包数据 send() 把打包好的数据发送出去 packint(整数) 打包一个整数，返回校验 packstr(字符串) 打包一个字符串，返回验证 unpackint(序号) 解包读取指定位置的整数，返回读取的值和校验 unpackstr(序号) 解包读取指定位置的字符串，返回读取的值和校验 By libla            此页面修订于： 2019-03-13 05:41:25 "},"Json/":{"url":"Json/","title":"JSON接口","keywords":"","body":"JSON接口 JSON序列化和反序列化 调用列表 parse(string) 传入一个JSON字符串，得到一个对应的lua中表示的值 print(value, [boolean[, boolean]]) 传入一个number/boolean/string/table，得到对应的JSON字符串，可选参数：第一个boolean表示是否格式化，第二个boolean表示非ASCII字符是否Unicode化显示 null 表示JSON的null值 By libla            此页面修订于： 2019-03-13 05:41:25 "}}